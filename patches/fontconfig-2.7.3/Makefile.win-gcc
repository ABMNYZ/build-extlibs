#BEWARE: this Makefile was designed for GNU make and uses some specific syntax
#        that can be incompatible with other make tools

#### the following is package-specific ####

BASENAME =libfreetype
DLLBASE  =$(BASENAME)
CFLAGS   =-pedantic -ansi -DFT2_BUILD_LIBRARY "-DFT_CONFIG_MODULES_H=<ftmodule.h>" -I. -I./include -O2 -I$(INCDIR) -mms-bitfields
LIBS     =-L$(LIBDIR) -lz
CXXFLAGS =
OBJS     =src/autofit/autofit.o src/bdf/bdf.o src/cff/cff.o src/base/ftbase.o src/base/ftbbox.o src/base/ftbdf.o src/base/ftbitmap.o src/cache/ftcache.o src/base/ftcid.o src/base/ftdebug.o src/base/ftfstype.o src/base/ftgasp.o src/base/ftglyph.o src/base/ftgxval.o src/gzip/ftgzip.o src/base/ftinit.o src/base/ftlcdfil.o src/lzw/ftlzw.o src/base/ftmm.o src/base/ftotval.o src/base/ftpatent.o src/base/ftpfr.o src/base/ftstroke.o src/base/ftsynth.o src/base/ftsystem.o src/base/fttype1.o src/base/ftwinfnt.o src/base/ftxf86.o src/pcf/pcf.o src/pfr/pfr.o src/psaux/psaux.o src/pshinter/pshinter.o src/psnames/psmodule.o src/raster/raster.o src/sfnt/sfnt.o src/smooth/smooth.o src/truetype/truetype.o src/type1/type1.o src/cid/type1cid.o src/type42/type42.o src/winfonts/winfnt.o
VEROBJ   =dll_version_res.o dll_version.o
CONFIG_H =ftconfig.h ftmodule.h
PCFILE   =freetype2.pc
CFFILE   =freetype-config
EXES     =$(EXE1) $(EXE2) $(EXE3)
EXEOBJS  =$(EXE1OBJS) $(EXE2OBJS) $(EXE3OBJS)
EXE1     =
EXE1OBJS =
EXE2     =
EXE2OBJS =
EXE3     =
EXE3OBJS =

#### end of packcage-specific ####

ifeq ($(NOPERL), 1)
  ECHO   = @echo
  CP     = cp
  MV     = mv
  RM_F   = rm -f
  RM_RF  = rm -rf
  MKPATH = mkdir -p
  SED    = sed
else
  ECHO   = @perl -l -e "print qq{@ARGV}" --
  CP     = perl -MExtUtils::Command -e "cp" --
  MV     = perl -MExtUtils::Command -e "mv" --
  RM_F   = perl -MExtUtils::Command -e "rm_f" --
  RM_RF  = perl -MExtUtils::Command -e "rm_rf" --
  MKPATH = perl -MExtUtils::Command -e "mkpath" --
  SED    = perl -pe
endif

RANLIB  = ranlib
CC      = gcc
CXX     = g++
STRIP   = strip
AR      = ar
ARFLAGS = csr

#by default we assume 32-bit target platform
BITS=32

PREFIX =./_output_
BINDIR =$(PREFIX)/bin
INCDIR =$(PREFIX)/include
LIBDIR =$(PREFIX)/lib

STATIC_LIB=$(BASENAME).a
IMPORT_LIB=$(BASENAME).dll.a
SHARED_LIB=$(DLLBASE)$(DLLSUFFIX).dll

#BEWARE: all you put into TARGETS will be deleted by 'make clean'
TARGETS = $(PCFILE) $(CFFILE) $(CONFIG_H) $(STATIC_LIB) $(SHARED_LIB) $(EXEOBJS) $(EXES)

all: $(TARGETS)

clean:
	$(RM_F) $(OBJS) $(VEROBJ) $(TARGETS)

$(STATIC_LIB): $(OBJS)
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@

$(SHARED_LIB): $(VEROBJ) $(OBJS)
	$(CC) -s -shared -o $@ $^ -Wl,--enable-auto-import,--export-all -Wl,--out-implib=$(IMPORT_LIB) $(LIBS)
	$(STRIP) -S $(SHARED_LIB)

%.o : %.c ; $(CC) $(CFLAGS) -c $< -o $@

%.o : %.cpp ; $(CXX) $(CXXFLAGS) -c $< -o $@

%.o : %.cc ; $(CXX) $(CXXFLAGS) -c $< -o $@

%.o : %.rc ; windres --define GCC_WINDRES $< -o $@

%.rc: %.rc.win-gcc ; $(SED) "s~\@buildinfo\@~$(BUILDINFO)~" $< > $@

%.h: %.h.win-gcc$(BITS) ; $(CP) $< $@

%.h: %.h.win-gcc ; $(CP) $< $@

%.c: %.c.win-gcc ; $(CP) $< $@

%-config: %-config.win-gcc ; $(CP) $< $@ 

%-config.bat: %-config.bat.win-gcc ; $(CP) $< $@ 

%.pc: %.pc.win-gcc ; $(SED) "s~\@prefix\@~$(PREFIX)~" $< > $@

#### the rest of the makefile is package-specific ####

install: all
	$(MKPATH) $(BINDIR)
	$(MKPATH) $(LIBDIR)
	$(MKPATH) $(INCDIR)/freetype2/freetype/config 
	$(CP) "$(STATIC_LIB)" "$(LIBDIR)"
	$(CP) "$(IMPORT_LIB)" "$(LIBDIR)"
	$(CP) "$(SHARED_LIB)" "$(BINDIR)"
	$(CP) "include/*.h" "$(INCDIR)"
	$(CP) "include/freetype/*.h" "$(INCDIR)/freetype2/freetype"
	$(CP) "include/freetype/config/*.h" "$(INCDIR)/freetype2/freetype/config"
